name: Java CI - pulsar:chaos:test

on:
  issue_comment:
    types: [created]

jobs:
  chaos-test:
    name: run chaos test
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: checkout hello-world repo
        uses: actions/checkout@v2
        with:
          ref: master
          path: hello

      - name: checkout chaos-test repo
        uses: actions/checkout@v2
        with:
          repository: streamnative/chaos-test
          token: ${{ secrets.RAN_GITHUB_TOKEN }}
          ref: master
          path: chaos-test

      - name: run chaos test
        env:
          GITHUB_USERNAME: gaoran10
          GITHUB_TOKEN: ${{ secrets.RAN_GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ACTION: ${{ github.action }}
        run: |
          ls -al ./hello/scripts

          commands=$(cat <<EOF
          ${{github.event.comment.body}}
          EOF
          )
          echo ${commands}
          export CI_HOME=$(pwd)/ci
          python ./hello/scripts/chaos-test-workflow.py
#          cd chaos-test
#          mvn -Dtest=SimpleMessagingTest clean test

#      - name: package reports
#        if: failure()
#        run: |
#          rm -rf artifacts
#          mkdir artifacts
#          find . -type d -name "reports" -exec cp --parents -R {} artifacts/ \;
#          zip -r artifacts.zip artifacts
#
#      - uses: actions/upload-artifact@master
#        name: upload reports
#        if: failure()
#        with:
#          name: artifacts
#          path: artifacts.zip
