name: Chaos Cluster Initialization Manually

on:
  workflow_dispatch:
    inputs:
      clusterId:
        description: 'Cluster ID in test platform'
        required: true
      imageName:
        description: 'The Pulsar image name'
        required: true
      imageVersion:
        description: 'The Pulsar image version'
        required: true
      serverHookUrl:
        description: 'The test platform server url'
        required: true
      clusterConfiguration:
        description: 'The cluster configuration json'
        required: true

jobs:
  chaos-pulsar-cluster:
    name: PrepareCluster_${{ github.event.inputs.clusterId }}
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: ClusterId_${{ github.event.inputs.clusterId }}
        run: |
          echo "clusterId: ${{ github.event.inputs.clusterId }}"
          echo "imageName: ${{ github.event.inputs.imageName }}"
          echo "imageVersion: ${{ github.event.inputs.imageVersion }}"
          echo "serverHookUrl: ${{ github.event.inputs.serverHookUrl }}"
          echo "clusterConfiguration: ${{ github.event.inputs.clusterConfiguration }}"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: BSFishy/pip-action@v1
        with:
          packages: ruamel.yaml

      - name: prepare python components
        run:
          pip install requests

      - name: checkout hello-world repo
        uses: actions/checkout@v2
        with:
          ref: master
          path: hello

      - name: test link action
        run: |
          python ./hello/scripts/test-platform-hook.py cluster_start ${{ github.run_id }} ${{ github.event.inputs.clusterId }} '${{ github.event.inputs.serverHookUrl }}'

      - name: 'install kubectl and helm'
        run: |
          echo 'install kubectl'
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.1/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          echo 'install helm'
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - uses: 'google-github-actions/setup-gcloud@master'
        with:
          project_id: 'affable-ray-226821'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          workload_identity_provider: 'projects/72250869071/locations/global/workloadIdentityPools/chaos-test-identity-pool/providers/github-action'
          service_account: 'sn-chaos-test@affable-ray-226821.iam.gserviceaccount.com'

      # Authenticate using the created credentials file.
      #
      # WARNING: The --cred-file flag is in preview and is subject to change.
      - name: 'gcloud login'
        run: |
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud config set compute/zone us-east4-b
          echo "------------------- get-credentials -------------------"
          gcloud container clusters get-credentials chaos-tests --region us-central1 --project affable-ray-226821

      - name: checkout chars repo
        uses: actions/checkout@v2
        with:
          repository: gaoran10/charts
          ref: gaoran/use-nio-netty-server-cnx-factory
          path: charts

      - name: deploy cluster
        env:
          GITHUB_USERNAME: gaoran10
          GITHUB_TOKEN: ${{ secrets.RAN_GITHUB_TOKEN }}
          RUN_ID: ${{ github.run_id }}
          TEST_ACTION: create
          CLUSTER_ID: ${{ github.event.inputs.clusterId }}
#          IMAGE_NAME: ${{ github.event.inputs.imageName }}
#          IMAGE_VERSION: ${{ github.event.inputs.imageVersion }}
        run: |
          rm -rf ./charts/charts/pulsar-custom
          cp -r ./charts/charts/pulsar-2.8.0.8 charts/pulsar-custom
          ./hello/hello/scripts/charts_manually.py ./charts/charts/pulsar-custom/values.yaml '${{ github.event.inputs.clusterConfiguration }}'
          python ./hello/scripts/chaos-cluster-manager-manually.py
          cd charts
#          ./scripts/pulsar/change_pulsar_image.sh ${{ github.event.inputs.imageName }} ${{ github.event.inputs.imageVersion }}
          ./scripts/pulsar/prepare_helm_release.sh -n 'chaos-${{ github.event.inputs.clusterID }}' -k 'chaos-pulsar-${{ github.event.inputs.clusterID }}' -c
          helm repo add loki https://grafana.github.io/loki/charts
          helm dependency update charts/pulsar-custom
          kubectl label namespace 'chaos-${{ github.event.inputs.clusterID }}' istio-injection=enabled
          kubectl create secret generic chaos-pulsar-${{ github.event.inputs.clusterID }}-tls-proxy -n 'chaos-${{ github.event.inputs.clusterID }}' --from-file=../hello/secure/kop/keystore.jks --from-file=../hello/secure/kop/truststore.jks
          helm install --set initialize=true --set namespace='chaos-${{ github.event.inputs.clusterID }}' --values ./charts/pulsar-custom/values.yaml 'chaos-pulsar-${{ github.event.inputs.clusterID }}'  ./charts/pulsar-custom/ --debug --wait --timeout 30m

      - name: deploy cluster success
        if: ${{ success() }}
        run: |
          python ./hello/scripts/test-platform-hook.py cluster_start_success ${{ github.run_id }} ${{ github.event.inputs.clusterId }} '${{ github.event.inputs.serverHookUrl }}'

      - name: deploy cluster failed
        if: ${{ cancelled() || failure() }}
        run: |
          python ./hello/scripts/test-platform-hook.py cluster_start_failed ${{ github.run_id }} ${{ github.event.inputs.clusterId }} '${{ github.event.inputs.serverHookUrl }}'
